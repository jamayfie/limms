% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/relLog.R
\name{relLog}
\alias{relLog}
\title{Calculate relative log expression (RLE)}
\usage{
relLog(x, intensities = 1:nrow(x))
}
\arguments{
\item{x}{An R object containing the data to be scaled arranged in
columns.}

\item{intensities}{The column numbers containing the intensities to be transformed.
The default is to assume all columns are intensities.}
}
\value{
Returns a data.table with relative log intensities appended to the input.
}
\description{
This function calculates relative log expression (RLE) for QC plotting.
}
\details{
This function transforms columns of data to relative log expression.
An internal function generally used in conjunction with boxplots to aid
the display of data that contain many measurements.
}
\note{
Works on any numeric column, but data should already be log transformed.
}
\examples{

require(data.table)

# A simplified version of the example from the runNorm function.

# For the example CBS dataset CBS.xcms_diffreport,
# An xcms diffreport included as limms package data

# Impute zeros and log transform:
all.log <- imputeZerosUnifMin(CBS.xcms_diffreport[,24:55])

# define colors for plots
colMet <- c("palegreen", "darkgreen")[c(rep(2,16), rep(1,8), rep(2,8))]

# Boxplots of log intensities
par(mfcol=c(1,2), oma=c(4,1,1,1))
boxplot(all.log[, .SD, .SDcols=patterns("log2")], col=colMet, las=2,  
  main="Unormalized intensities (log)")

# Boxpots of Relative log expression (RLE)
CBS.relLog <- relLog(all.log, intensities=33:64)

boxplot(CBS.relLog[, .SD, .SDcols=patterns("rle")], col=colMet, las=2, ylim=c(-5, 5),
  main="RLE unormalized intensities")
abline(h=0)
}
\seealso{
\code{\link{runNorm}}
}
